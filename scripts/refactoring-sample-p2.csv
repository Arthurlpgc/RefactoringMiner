refactoringType,name,description,diffUrl
"Rename Method",netty,"Rename Method	public canHandleInbound() : boolean renamed to public hasInboundByteBuffer() : boolean in class io.netty.channel.DefaultChannelHandlerContext",https://github.com/netty/netty/commit/5e93d206ffeb637f9b4885643860ff63a8412dc6?diff=split
"Rename Method",netty,"Rename Method	public persistValue(ID int) : boolean renamed to public isPersistValue(ID int) : boolean in class io.netty.handler.codec.spdy.DefaultSpdySettingsFrame",https://github.com/netty/netty/commit/fdb66b629403a5bfca1fc6c14f8e743cdbe08898?diff=split
"Rename Method",netty,"Rename Method	public wrapMedium(values int) : ChannelBuffer renamed to public copyMedium(values int) : ChannelBuffer in class io.netty.buffer.ChannelBuffers",https://github.com/netty/netty/commit/c8fa42beaf29fe0b65a8fbb8a031f9db46e14c10?diff=split
"Rename Method",clojure,"Rename Method	public get(i int) : Object renamed to public nth(i int) : Object in class clojure.lang.PersistentArrayList",https://github.com/clojure/clojure/commit/cdd429f0d51b754ed0d2f4ab4cd9b90d320a3c0e?diff=split
"Rename Method",netty,"Rename Method	public wrapBoolean(value boolean) : ChannelBuffer renamed to public copyBoolean(value boolean) : ChannelBuffer in class io.netty.buffer.ChannelBuffers",https://github.com/netty/netty/commit/c8fa42beaf29fe0b65a8fbb8a031f9db46e14c10?diff=split
"Rename Method",titan,"Rename Method	private getVertexIDType(vertexid long) : VertexIDType renamed to private getUserVertexIDType(vertexid long) : VertexIDType in class com.thinkaurelius.titan.graphdb.idmanagement.IDManager",https://github.com/thinkaurelius/titan/commit/923dbcd39c67bda3f91580a6ceab68f64fb554de?diff=split
"Rename Method",netty,"Rename Method	public count() : int renamed to public isFirst() : boolean in class io.netty.handler.timeout.IdleStateEvent",https://github.com/netty/netty/commit/9da01417b25bca25af70f27246ab961166cd85bb?diff=split
"Rename Method",voldemort,"Rename Method	public RebalanceClient(cluster Cluster, config RebalanceClientConfig) renamed to public RebalanceClient(bootstrapUrl String, maxParallelRebalancing int, config AdminClientConfig) in class voldemort.client.rebalance.RebalanceClient",https://github.com/voldemort/voldemort/commit/f085f188403b8083b0b05fbcf3d2b329bac2ace1?diff=split
"Rename Method",titan,"Rename Method	public getStartTime() : long renamed to public getStartTimeMicro() : long in class com.thinkaurelius.titan.diskstorage.log.ReadMarker",https://github.com/thinkaurelius/titan/commit/6ef5e7d8b390cfc63a8dedc0dbbccb67517b7242?diff=split
"Rename Method",junit,"Rename Method	protected useReoadingTestSuiteLoader() : boolean renamed to protected useReloadingTestSuiteLoader() : boolean in class junit.runner.BaseTestRunner",https://github.com/junit-team/junit/commit/04f4f3197084ad9ad7c050ce1a40d6f4421662f4?diff=split
"Move Class",k-9,"Move Class	com.fsck.k9.mail.store.TrustManagerFactory moved to com.android.email.mail.store.TrustManagerFactory",https://github.com/k9mail/k-9/commit/28e882782776861e54064d863dbb27ddeaa7aa9d?diff=split
"Move Class",RxJava,"Move Class	rx.functions.Functions.NullFunction moved to rx.internal.util.UtilityFunctions.NullFunction",https://github.com/ReactiveX/RxJava/commit/56b9feaf4257c86f5f952677e3529b09cb16a620?diff=split
"Move Class",netty,"Move Class	org.jboss.netty.channel.socket.httptunnel.FakeChannelConfig moved to org.jboss.netty.channel.socket.http.FakeChannelConfig",https://github.com/netty/netty/commit/f7729bc8bb4cf6e0ee914bf2893b80cd02af9f28?diff=split
"Move Class",voldemort,"Move Class	voldemort.client.protocol.pb.TruncateEntriesResponse moved to voldemort.client.protocol.pb.VAdminProto.TruncateEntriesResponse",https://github.com/voldemort/voldemort/commit/9e63cd79c9d13a940d3538b3e88a46ffa39dd63a?diff=split
"Move Class",titan,"Move Class	com.thinkaurelius.faunus.formats.titan.util.ConfigurationUtil moved to com.thinkaurelius.titan.hadoop.formats.titan.util.ConfigurationUtil",https://github.com/thinkaurelius/titan/commit/9a47a0c36d02635d43689a36d04828be5e2e5d0b?diff=split
"Move Class",netty,"Move Class	org.jboss.netty.group.ChannelGroupFuture moved to org.jboss.netty.channel.group.ChannelGroupFuture",https://github.com/netty/netty/commit/5b3cb391e0830384032bcfd14818f19faaa67a67?diff=split
"Move Class",netty,"Move Class	org.jboss.netty.handler.timeout.ReadTimeoutHandler moved to io.netty.handler.timeout.ReadTimeoutHandler",https://github.com/netty/netty/commit/6fdb7d91165f7e82c5608c07ee911bc9b6fcdf5a?diff=split
"Move Class",RxJava,"Move Class	rx.operators.OperatorGroupByTest moved to rx.internal.operators.OperatorGroupByTest",https://github.com/ReactiveX/RxJava/commit/75303612b0041b0e0e819b209e554826def251fd?diff=split
"Move Class",netty,"Move Class	io.netty.handler.codec.serialization.OioNioSocketObjectStreamEchoTest moved to io.netty.testsuite.transport.socket.OioNioSocketObjectStreamEchoTest",https://github.com/netty/netty/commit/8663716d38040537f6660cf2b81ee74549e0ab6d?diff=split
"Move Class",netty,"Move Class	org.jboss.netty.handler.timeout.HashedWheelTimer moved to org.jboss.netty.channel.timeout.HashedWheelTimer",https://github.com/netty/netty/commit/2625d10e580831777a3443c9f866b57a830b974e?diff=split
"Move Operation",netty,"Move Operation	public newSucceededFuture() : Future from class io.netty.util.concurrent.AbstractEventExecutor to public getNow() : V from class io.netty.util.concurrent.SucceededFuture",https://github.com/netty/netty/commit/ce87b627be941e3dc56e85164088ab68f80188db?diff=split
"Move Operation",netty,"Move Operation	protected setOpWrite(channel AbstractNioChannel) : void from class io.netty.channel.socket.nio.SelectorEventLoop to protected doFlush(future ChannelFuture) : int from class io.netty.channel.socket.nio.NioSocketChannel",https://github.com/netty/netty/commit/607d784e5eb6dd73abccb3a4f42e8cc7cd7dd4bc?diff=split
"Move Operation",clojure,"Move Operation	public withMeta(meta IPersistentMap) : Obj from class clojure.lang.PersistentHashtableMap to public cons(o Object) : IPersistentCollection from class clojure.lang.AnArray",https://github.com/clojure/clojure/commit/279dd21d4b919496c8fb54c3135f2b82cc36f5c2?diff=split
"Move Operation",storm,"Move Operation	public findByThriftId(fieldId int) : _Fields from class backtype.storm.generated.DRPCExecutionException to public getFieldValue(field _Fields) : Object from class backtype.storm.generated.DistributedRPCInvocations.result_args",https://github.com/nathanmarz/storm/commit/cdb116e942666973bc4eaa0df098d5bab82739e7?diff=split
"Move Operation",netty,"Move Operation	protected getSucceededFuture() : ChannelFuture from class org.jboss.netty.channel.socket.nio.NioServerSocketChannel to protected setClosed() : boolean from class org.jboss.netty.channel.local.LocalServerChannel",https://github.com/netty/netty/commit/9410fd155e4612149f3e8b50bd77ca73f8325503?diff=split
"Move Operation",titan,"Move Operation	public makePropertyKey(name String) : PropertyKeyMaker from class com.thinkaurelius.titan.core.TitanTransaction to public makePropertyKey(name String) : PropertyKeyMaker from class com.thinkaurelius.titan.graphdb.blueprints.TitanBlueprintsGraph",https://github.com/thinkaurelius/titan/commit/6e3eaf56db44422348049f75117cb4b07aebfd9f?diff=split
"Move Operation",netty,"Move Operation	package writeMedium(value int) : CompositeByteBuf from class io.netty.buffer.CompositeByteBuf to public writeMedium(value int) : CompositeByteBuf from class io.netty.buffer.CompositeByteBuf",https://github.com/netty/netty/commit/65c2a6ed46c163081fed5307f33489a606177f33?diff=split
"Move Operation",clojure,"Move Operation	public peek() : Object from class clojure.lang.AMapEntry to public get(key Object) : Object from class clojure.lang.APersistentMap",https://github.com/clojure/clojure/commit/7de158ba6ee7cbf73e9f91fce4d038dd73b40789?diff=split
"Move Operation",k-9,"Move Operation	public expunge() : Message[] from class com.fsck.k9.mail.store.Pop3Store.Pop3Folder to public isExpungeCapable() : boolean from class com.fsck.k9.mail.store.ImapStore",https://github.com/k9mail/k-9/commit/41d7ca51a3de28451fa6d2b39ed310a67b8925f0?diff=split
"Move Operation",voldemort,"Move Operation	public getStealReplicaPartitionsList() : List<java.lang.Integer> from class voldemort.client.protocol.pb.InitiateRebalanceNodeRequest to public getPartitions() : List<Integer> from class voldemort.client.rebalance.RebalancePartitionsInfo",https://github.com/voldemort/voldemort/commit/d06fcec37fb3f3d45ffbd3fe15eafce77ba64069?diff=split
"Extract Operation",netty,"Extract Operation	public setOption(option ChannelOption<T>, value T) : boolean extracted from public setOption(key String, value Object) : boolean in class io.netty.channel.socket.DefaultDatagramChannelConfig",https://github.com/netty/netty/commit/08137e2c49a030a8dedb511af14f779e12b5f6a0?diff=split
"Extract Operation",k-9,"Extract Operation	private generateCV(key String, value String) : ContentValues extracted from protected put(key String, value String) : void in class com.fsck.k9.preferences.Storage",https://github.com/k9mail/k-9/commit/40bdf999256e6c4898e1adfb22c8ca34a7752318?diff=split
"Extract Operation",netty,"Extract Operation	public run() : void extracted from public main(args String[]) : void in class io.netty.example.telnet.TelnetClient",https://github.com/netty/netty/commit/1b02743367a045916f0d644a1fd50c1d2b7d38e7?diff=split
"Extract Operation",jsoup,"Extract Operation	private appendNormalisedText(accum StringBuilder, textNode TextNode) : void extracted from private text(accum StringBuilder) : void in class org.jsoup.nodes.Element",https://github.com/jhy/jsoup/commit/e4917452778b4e1b19b2fcbe9f258e9e4061a97f?diff=split
"Extract Operation",voldemort,"Extract Operation	public getRawStore(storeName String, resolver InconsistencyResolver<Versioned<V>>, clientId UUID) : Store<K,V,T> extracted from public getRawStore(storeName String, resolver InconsistencyResolver<Versioned<V>>) : Store<K,V,T> in class voldemort.client.CachingStoreClientFactory",https://github.com/voldemort/voldemort/commit/dc71868e4e27a0e602669e72e1c9c54d301f6058?diff=split
"Extract Operation",RxJava,"Extract Operation	private moveToNext() : boolean extracted from public hasNext() : boolean in class rx.operators.OperationNext.NextIterator",https://github.com/ReactiveX/RxJava/commit/e6a2951c78d1e0a2365ebbd4e5d956ba7ecd8d40?diff=split
"Extract Operation",netty,"Extract Operation	public run() : void extracted from public main(args String[]) : void in class io.netty.example.http.websocketx.sslserver.WebSocketSslServer",https://github.com/netty/netty/commit/1b02743367a045916f0d644a1fd50c1d2b7d38e7?diff=split
"Extract Operation",netty,"Extract Operation	public deregister(matcher ChannelGroupMatcher) : ChannelGroupFuture extracted from public deregister() : ChannelGroupFuture in class io.netty.channel.group.DefaultChannelGroup",https://github.com/netty/netty/commit/d23c3b3382ff6b2dc7625cb0a0cd31d767efafc5?diff=split
"Extract Operation",netty,"Extract Operation	private getOption(option SocketOption, defaultValue Object) : Object extracted from public isKeepAlive() : boolean in class io.netty.channel.socket.aio.AioSocketChannelConfig",https://github.com/netty/netty/commit/42f6a27235fd43494fab902d9054e22b60b1e64b?diff=split
"Extract Operation",netty,"Extract Operation	public addAfter(invoker ChannelHandlerInvoker, baseName String, name String, handler ChannelHandler) : ChannelPipeline extracted from public addAfter(group EventExecutorGroup, baseName String, name String, handler ChannelHandler) : ChannelPipeline in class io.netty.channel.DefaultChannelPipeline",https://github.com/netty/netty/commit/132af3a485015ff912bd567a47881814d2ce1828?diff=split
"Rename Class",junit,"Rename Class	org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest renamed to org.junit.tests.experimental.rules.ExpectedExceptionRuleTest",https://github.com/junit-team/junit/commit/97afc5e205e1c6ac0f5a9aefabed92d58d88ab81?diff=split
"Rename Class",titan,"Rename Class	com.thinkaurelius.titan.hadoop.HadoopEdgeTest renamed to com.thinkaurelius.titan.hadoop.FaunusEdgeTest",https://github.com/thinkaurelius/titan/commit/e1ac9ae34518829d69f60234525b2133b31a88e2?diff=split
"Rename Class",voldemort,"Rename Class	voldemort.client.SystemStore renamed to voldemort.client.SystemStoreClient",https://github.com/voldemort/voldemort/commit/1019ecb7e19d27ff35923f6213f654a8fcc94aff?diff=split
"Rename Class",RxJava,"Rename Class	org.rx.operations.OperationTake.UnitTest.TestWatchable renamed to org.rx.operations.OperationTake.UnitTest.TestObservable",https://github.com/ReactiveX/RxJava/commit/2a4122c11b95eaa3213c2c3e54a93d28b9231eec?diff=split
"Rename Class",voldemort,"Rename Class	voldemort.server.rest.RestServerGetRequestValidator renamed to voldemort.rest.RestGetRequestValidator",https://github.com/voldemort/voldemort/commit/9ebeb605f3f6434ccc7e2dc9214f99a5148c2d57?diff=split
"Rename Class",netty,"Rename Class	org.jboss.netty.handler.codec.http.HttpCookieDecoder renamed to org.jboss.netty.handler.codec.http.CookieDecoder",https://github.com/netty/netty/commit/b8bc78a7d089a27d30af68aef4efd4d2eb2a2308?diff=split
"Rename Class",netty,"Rename Class	org.jboss.netty.channel.socket.sctp.NioServerSocketChannelFactory renamed to org.jboss.netty.channel.socket.sctp.DefaultSctpClientChannelFactory",https://github.com/netty/netty/commit/dad06d539c746caf314c251d2c44830559d5389c?diff=split
"Rename Class",netty,"Rename Class	io.netty.buffer.ChannelBufferInputStream renamed to io.netty.buffer.ByteBufInputStream",https://github.com/netty/netty/commit/5164d91255a5cd68bcd1fade07e6ef4fdb3c7646?diff=split
"Rename Class",RxJava,"Rename Class	org.rx.operations.OperationMerge.UnitTest.TestASynchronousWatchable renamed to org.rx.operations.OperationMerge.UnitTest.TestASynchronousObservable",https://github.com/ReactiveX/RxJava/commit/2a4122c11b95eaa3213c2c3e54a93d28b9231eec?diff=split
"Rename Class",RxJava,"Rename Class	rx.operators.OperatorFromIterableTest renamed to rx.operators.OnSubscribeFromIterableTest",https://github.com/ReactiveX/RxJava/commit/744e1034d14005fcad7191b0e920342d4a163fee?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	public add(name AsciiString, values AsciiString) : Http2Headers extracted from public add(name CharSequence, values Object) : HttpHeaders in class io.netty.handler.codec.http.EmptyHttpHeaders & moved to class io.netty.handler.codec.http2.DefaultHttp2Headers",https://github.com/netty/netty/commit/43d097d25aecc227dae30eaa8b0666ca50e0d87e?diff=split
"Extract & Move Operation",titan,"Extract & Move Operation	public readInlineEdgeType(in ReadBuffer) : long extracted from private parseProperties(vertexid long, data Entry, parseHeaderOnly boolean, tx StandardTitanTx) : ImmutableLongObjectMap in class com.thinkaurelius.titan.graphdb.database.EdgeSerializer & moved to class com.thinkaurelius.titan.graphdb.database.idhandling.IDHandler",https://github.com/thinkaurelius/titan/commit/e3cf51623ab321f9dcde185038029722cefcf44c?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	package addToNextOutboundBuffer(ctx ChannelHandlerContext, msg Object) : void extracted from public flush(ctx ChannelHandlerContext, future ChannelFuture) : void in class io.netty.handler.codec.MessageToMessageEncoder & moved to class io.netty.handler.codec.CodecUtil",https://github.com/netty/netty/commit/b76c39318d8edf39759b25990edcc4ef26bb493a?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	package decodeString(src ByteBuffer, dst CharBuffer, decoder CharsetDecoder) : void extracted from public toString(index int, length int, charset Charset) : String in class org.jboss.netty.buffer.ByteBufferBackedChannelBuffer & moved to class org.jboss.netty.buffer.ChannelBuffers",https://github.com/netty/netty/commit/55b0bc2c2c4a7e406db87d34921e6376f83bd433?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	public set(name CharSequence, values CharSequence) : TextHeaders extracted from public set(name AsciiString, values AsciiString) : Http2Headers in class io.netty.handler.codec.http2.DefaultHttp2Headers & moved to class io.netty.handler.codec.DefaultTextHeaders",https://github.com/netty/netty/commit/2374e17c6ed3b037f2419dd33acdb481536b751d?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	public add(name AsciiString, values AsciiString) : Http2Headers extracted from public add(name CharSequence, values Object) : StompHeaders in class io.netty.handler.codec.stomp.DefaultStompHeaders & moved to class io.netty.handler.codec.http2.DefaultHttp2Headers",https://github.com/netty/netty/commit/43d097d25aecc227dae30eaa8b0666ca50e0d87e?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	package clearInternalWriteBuffer() : void extracted from private writeUnfair(channel NioSocketChannel, mightNeedWakeup boolean, writeSpinCount int) : void in class org.jboss.netty.channel.socket.nio.NioWorker & moved to class org.jboss.netty.channel.socket.nio.NioSocketChannel",https://github.com/netty/netty/commit/f2c1734636b2efb2c77ae91bdb63c43ea13fe4d6?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	public getByte(index int) : byte extracted from public getByte(index int) : byte in class io.netty.buffer.SlicedByteBuf & moved to class io.netty.buffer.AbstractByteBuf",https://github.com/netty/netty/commit/1c1570ffc43de209f46465c526faa891bd6e4a87?diff=split
"Extract & Move Operation",junit,"Extract & Move Operation	public invoke(test Object) : void extracted from protected runTestMethod() : void in class org.junit.internal.runners.MethodRoadie & moved to class org.junit.internal.runners.TestMethod",https://github.com/junit-team/junit/commit/6acc164b4125da775cccd4035c1b99e9d404bacd?diff=split
"Extract & Move Operation",netty,"Extract & Move Operation	public testMethodName(testName TestName) : String extracted from protected run() : void in class io.netty.testsuite.transport.socket.AbstractSocketTest & moved to class io.netty.testsuite.util.TestUtils",https://github.com/netty/netty/commit/2338bc52cbbf5eaf5aaf422fabfab89ba5cd887b?diff=split
"Inline Operation",netty,"Inline Operation	public run() : void inlined to public main(args String[]) : void in class io.netty.example.securechat.SecureChatClient",https://github.com/netty/netty/commit/3f8194557b5fe14e8f3313570ef28f29cbbef150?diff=split
"Inline Operation",k-9,"Inline Operation	private getBestViewIntentForContentUri() : IntentAndResolvedActivitiesCount inlined to private getBestViewIntentAndSaveFileIfNecessary() : Intent in class com.fsck.k9.view.AttachmentView",https://github.com/k9mail/k-9/commit/d9b6e10cbeda0bf189478ec18733b4fc7451c596?diff=split
"Inline Operation",k-9,"Inline Operation	private notifyAccount(context Context, account Account, message Message) : boolean inlined to private downloadLargeMessages(account Account, remoteFolder Folder, localFolder LocalFolder, largeMessages ArrayList<Message>, progress AtomicInteger, newMessages AtomicInteger, todo int, fp FetchProfile) : void in class com.fsck.k9.controller.MessagingController",https://github.com/k9mail/k-9/commit/d3cc1fdfdc05109fb38a0fd84589dd8b5de47059?diff=split
"Inline Operation",netty,"Inline Operation	private get(name String, last boolean) : String inlined to public get(name String) : String in class io.netty.handler.codec.http.DefaultHttpHeaders",https://github.com/netty/netty/commit/f84a50d3cb3d6dc6240f0233e1703a0eca407982?diff=split
"Inline Operation",netty,"Inline Operation	private invokeWrite(ctx ChannelHandlerContext, msg Object, flush boolean, promise ChannelPromise) : void inlined to public invokeWrite(ctx ChannelHandlerContext, msg Object, promise ChannelPromise) : void in class io.netty.channel.DefaultChannelHandlerInvoker",https://github.com/netty/netty/commit/110745b0eb1efa6ffd532d2c1f26c7f3b4b2533b?diff=split
"Inline Operation",k-9,"Inline Operation	private pruneCachedAttachments(force boolean, attachmentsDir File) : void inlined to public pruneCachedAttachments(force boolean) : void in class com.fsck.k9.mail.store.LocalStore",https://github.com/k9mail/k-9/commit/f9d39e4814a9e1b1c87c0397e1155430566f0ba4?diff=split
"Inline Operation",netty,"Inline Operation	private updateParentsFree(id int) : void inlined to package free(handle long) : void in class io.netty.buffer.PoolChunk",https://github.com/netty/netty/commit/d25ed3f0e749aee018aa20104fd4cf817cc74dfb?diff=split
"Inline Operation",voldemort,"Inline Operation	protected notifyUnavailable(node Node) : void inlined to protected setUnavailable(node Node, e UnreachableStoreException) : void in class voldemort.cluster.failuredetector.AbstractFailureDetector",https://github.com/voldemort/voldemort/commit/30797c02f076b3b14a1f376e7bf9ae02f530bbb4?diff=split
"Inline Operation",netty,"Inline Operation	public run() : void inlined to public main(args String[]) : void in class io.netty.example.socksproxy.SocksServer",https://github.com/netty/netty/commit/3f8194557b5fe14e8f3313570ef28f29cbbef150?diff=split
"Inline Operation",titan,"Inline Operation	public type(type String) : AbstractVertexCentricQueryBuilder inlined to public type(type TitanType) : AbstractVertexCentricQueryBuilder in class com.thinkaurelius.titan.graphdb.query.AbstractVertexCentricQueryBuilder",https://github.com/thinkaurelius/titan/commit/27bc9b5f7d22009fb90d2d1849847e43c4253d6b?diff=split
"Move Attribute",netty,"Move Attribute	private sslCtx : SslContext from class io.netty.example.spdy.client.SpdyClient to class io.netty.example.http.websocketx.server.WebSocketServerInitializer",https://github.com/netty/netty/commit/3f8194557b5fe14e8f3313570ef28f29cbbef150?diff=split
"Move Attribute",netty,"Move Attribute	private sslCtx : SslContext from class io.netty.example.http2.client.Http2Client to class io.netty.example.telnet.TelnetClientInitializer",https://github.com/netty/netty/commit/3f8194557b5fe14e8f3313570ef28f29cbbef150?diff=split
"Move Attribute",storm,"Move Attribute	private values : List<Object> from class backtype.storm.tuple.Tuple to class backtype.storm.tuple.TupleImpl",https://github.com/nathanmarz/storm/commit/cc646c35e8b723944b2fa9b3af64cc31f46d7ef6?diff=split
"Move Attribute",netty,"Move Attribute	public X_GZIP : AsciiString from class io.netty.handler.codec.http.HttpContentDecompressor to class io.netty.handler.codec.http.HttpHeaderValues",https://github.com/netty/netty/commit/685075f1a058c0d5d8fc59072278bc822dce26d8?diff=split
"Move Attribute",storm,"Move Attribute	public metaDataMap : Map<_Fields,org.apache.thrift7.meta_data.FieldMetaData> from class backtype.storm.generated.DistributedRPC to class backtype.storm.generated.DistributedRPC.execute_args",https://github.com/nathanmarz/storm/commit/cdb116e942666973bc4eaa0df098d5bab82739e7?diff=split
"Move Attribute",netty,"Move Attribute	package L_CODES : int from class org.jboss.netty.util.internal.jzlib.StaticTree to class org.jboss.netty.util.internal.jzlib.JZlib",https://github.com/netty/netty/commit/a7e7d124439c56d10c9883b46d1cd055feefd797?diff=split
"Move Attribute",netty,"Move Attribute	private sslCtx : SslContext from class io.netty.example.spdy.client.SpdyClient to class io.netty.example.telnet.TelnetClientInitializer",https://github.com/netty/netty/commit/3f8194557b5fe14e8f3313570ef28f29cbbef150?diff=split
"Move Attribute",netty,"Move Attribute	private voidFuture : ChannelFuture from class io.netty.channel.AbstractChannel to class io.netty.channel.AbstractChannel.DefaultUnsafe",https://github.com/netty/netty/commit/cb718a07c82c6a50821ae0eb805983bb8ec8b3e5?diff=split
"Move Attribute",netty,"Move Attribute	package MANY : int from class org.jboss.netty.util.internal.jzlib.InfBlocks to class org.jboss.netty.util.internal.jzlib.JZlib",https://github.com/netty/netty/commit/a7e7d124439c56d10c9883b46d1cd055feefd797?diff=split
"Move Attribute",netty,"Move Attribute	private promises : ChannelPromise[] from class io.netty.channel.ChannelOutboundBuffer to class io.netty.channel.MessageList",https://github.com/netty/netty/commit/b57d9f307f61161b62a335734438fb0c49260c84?diff=split
"Pull Up Operation",junit,"Pull Up Operation	private interceptorFields() : List<FrameworkField> from class org.junit.experimental.interceptor.Interceptors to private interceptorFields() : List<FrameworkField> from class org.junit.runners.BlockJUnit4ClassRunner",https://github.com/junit-team/junit/commit/e6769d4009db8030661815965e2e22829a4619ff?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public write(ctx ChannelHandlerContext, msg Object, promise ChannelPromise) : void from class io.netty.channel.ChannelOutboundHandlerAdapter to public write(ctx ChannelHandlerContext, msg Object, promise ChannelPromise) : void from class io.netty.channel.ChannelHandlerAdapter",https://github.com/netty/netty/commit/110745b0eb1efa6ffd532d2c1f26c7f3b4b2533b?diff=split
"Pull Up Operation",titan,"Pull Up Operation	public getExistingNode(id long) : InternalNode from class com.thinkaurelius.titan.graphdb.transaction.StandardPersistGraphTx to public getExistingNode(id long) : InternalNode from class com.thinkaurelius.titan.graphdb.transaction.AbstractGraphTx",https://github.com/thinkaurelius/titan/commit/b1d1358bdd1a24358b712c69e39ab535ea8f1042?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public getBytes(index int, out OutputStream, length int) : void from class io.netty.buffer.DefaultCompositeByteBuf to public discardReadBytes() : ByteBuf from class io.netty.buffer.AbstractByteBuf",https://github.com/netty/netty/commit/cbcabaf29b24fb4c04334c851c33ce9a278a3389?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public freeOutboundBuffer(ctx ChannelHandlerContext) : void from class io.netty.channel.DefaultChannelPipeline.MessageHeadHandler to public freeOutboundBuffer(ctx ChannelHandlerContext) : void from class io.netty.channel.DefaultChannelPipeline.HeadHandler",https://github.com/netty/netty/commit/d4742bbe16bd4864bf824d5946de16382de72a73?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public testZLIB_OR_NONE() : void from class io.netty.handler.codec.compression.JZlibTest to public testZLIB_OR_NONE() : void from class io.netty.handler.codec.compression.ZlibTest",https://github.com/netty/netty/commit/5447fe1e59772f71a57eb0262beae69a1fe7e418?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public freeInboundBuffer(ctx ChannelHandlerContext, buf ChannelBuf) : void from class io.netty.bootstrap.ServerBootstrap.Acceptor to public freeInboundBuffer(ctx ChannelHandlerContext, buf ChannelBuf) : void from class io.netty.channel.ChannelInboundHandlerAdapter",https://github.com/netty/netty/commit/51e6519b67cc947e5375038e26595d9bbbc4d4bb?diff=split
"Pull Up Operation",RxJava,"Pull Up Operation	public testNestedActions() : void from class rx.schedulers.CurrentThreadSchedulerTest to public testNestedActions() : void from class rx.schedulers.AbstractSchedulerTests",https://github.com/ReactiveX/RxJava/commit/9f35594ec806672e7760873ba6837eac8f9b4454?diff=split
"Pull Up Operation",netty,"Pull Up Operation	public onPingAckRead(ctx ChannelHandlerContext, data ByteBuf) : void from class io.netty.example.http2.server.HelloWorldHttp2Handler to public onPingAckRead(ctx ChannelHandlerContext, data ByteBuf) : void from class io.netty.handler.codec.http2.AbstractHttp2ConnectionHandler",https://github.com/netty/netty/commit/1d8c7ff52e16effc3666e9d4a8166484b51f124e?diff=split
"Pull Up Operation",titan,"Pull Up Operation	public testBulkLoading() : void from class com.thinkaurelius.titan.hadoop.formats.titan.cassandra.TitanCassandraOutputFormatTest to public testBulkLoading() : void from class com.thinkaurelius.titan.hadoop.formats.TitanOutputFormatTest",https://github.com/thinkaurelius/titan/commit/d83755cb52e5c2072125b7c04ccec74eff396712?diff=split
"Extract Superclass",voldemort,"Extract Superclass	voldemort.utils.pool.KeyedResourcePoolBaseTest from classes [voldemort.utils.pool.KeyedResourcePoolTest]",https://github.com/voldemort/voldemort/commit/1f3a4665f0b0816b55d0b2820ed93248c851bc49?diff=split
"Extract Superclass",voldemort,"Extract Superclass	voldemort.store.routed.AbstractZoneAffinityTest from classes [voldemort.store.routed.ZoneAffinityGetAllTest, voldemort.store.routed.ZoneAffinityGetVersionsTest, voldemort.store.routed.ZoneAffinityGetTest]",https://github.com/voldemort/voldemort/commit/3428ee40c5283cb012551003c67ced7680568f7d?diff=split
"Extract Superclass",netty,"Extract Superclass	io.netty.handler.codec.spdy.SpdyHeaderBlockCompressor from classes [io.netty.handler.codec.spdy.SpdyZlibEncoder]",https://github.com/netty/netty/commit/b22ebbe4309f37a80cbed53b58e9982c9273f65c?diff=split
"Extract Superclass",netty,"Extract Superclass	io.netty.handler.codec.compression.ZlibTest from classes [io.netty.handler.codec.compression.JZlibTest, io.netty.handler.codec.compression.JdkZlibTest]",https://github.com/netty/netty/commit/cbf269e9b97978fd1dcd4c597f539364bcffa701?diff=split
"Extract Superclass",voldemort,"Extract Superclass	voldemort.utils.AbstractConsistencyFixer from classes [voldemort.utils.ConsistencyFixWorker]",https://github.com/voldemort/voldemort/commit/7234b65bba50c2604f39c69125935ab7836fd645?diff=split
"Extract Superclass",titan,"Extract Superclass	com.thinkaurelius.titan.graphdb.query.BaseQuery from classes [com.thinkaurelius.titan.diskstorage.keycolumnvalue.SliceQuery, com.thinkaurelius.titan.diskstorage.indexing.IndexQuery]",https://github.com/thinkaurelius/titan/commit/f54f1be596c68cc58edfb1f15cc193b2483e534a?diff=split
"Extract Superclass",junit,"Extract Superclass	org.junit.tests.experimental.rules.TimeoutRuleTest.AbstractTimeoutTest from classes [org.junit.tests.experimental.rules.TimeoutRuleTest.HasGlobalLongTimeout, org.junit.tests.experimental.rules.TimeoutRuleTest.HasGlobalTimeUnitTimeout]",https://github.com/junit-team/junit/commit/11039f25897fe4daba274292a49a078afa87991b?diff=split
"Extract Superclass",voldemort,"Extract Superclass	voldemort.server.scheduler.slop.SlopPusherJob from classes [voldemort.server.scheduler.slop.BlockingSlopPusherJob, voldemort.server.scheduler.slop.StreamingSlopPusherJob]",https://github.com/voldemort/voldemort/commit/21040177cf709cd0351126b3d73f754e62200708?diff=split
"Extract Superclass",netty,"Extract Superclass	io.netty.handler.codec.DefaultConvertibleHeaders from classes [io.netty.handler.codec.DefaultTextHeaders]",https://github.com/netty/netty/commit/2374e17c6ed3b037f2419dd33acdb481536b751d?diff=split
"Extract Superclass",titan,"Extract Superclass	com.thinkaurelius.titan.graphdb.serializer.SerializerTestCommon from classes [com.thinkaurelius.titan.graphdb.serializer.SerializerTest]",https://github.com/thinkaurelius/titan/commit/0a37e618e0e6c4cea11ca93666a1a03779a7f297?diff=split
"Push Down Operation",voldemort,"Push Down Operation	protected CommandLineRemoteOperation(remoteOperationConfig RemoteOperationConfig, commandId String) from class voldemort.utils.impl.CommandLineRemoteOperation to public SshClusterStopper(hostNames Collection<String>, sshPrivateKey File, hostUserId String, voldemortRootDirectory String) from class voldemort.utils.impl.SshClusterStopper",https://github.com/voldemort/voldemort/commit/fb023076d878d345e3b0dc238ffff367d5cfa5f2?diff=split
"Push Down Operation",voldemort,"Push Down Operation	public getMasterPartitionId(key byte[]) : int from class voldemort.routing.BaseStoreRoutingPlan to public getMasterPartitionId(key byte[]) : int from class voldemort.routing.StoreRoutingPlan",https://github.com/voldemort/voldemort/commit/5459942b99dc2a0bbdf32bcfe3f5928fe1084591?diff=split
"Push Down Operation",netty,"Push Down Operation	public flush(ctx ChannelHandlerContext, future ChannelPromise) : void from class io.netty.channel.ChannelDuplexHandler to public flush(ctx ChannelHandlerContext, promise ChannelPromise) : void from class io.netty.channel.DefaultChannelPipelineTest.TestHandler",https://github.com/netty/netty/commit/b4eaedf7124fcf9f7c7327b4ff86cf68e4723ba5?diff=split
"Push Down Operation",RxJava,"Push Down Operation	public schedule(state T, action Func2<Scheduler,T,Subscription>, dueTime long, unit TimeUnit) : Subscription from class rx.concurrency.AbstractScheduler to public schedule(state T, action Func2<Scheduler,T,Subscription>, delay long, unit TimeUnit) : Subscription from class rx.concurrency.NewThreadScheduler",https://github.com/ReactiveX/RxJava/commit/ea88d82b41b85750ba2bddbbe2e71ca3580d621a?diff=split
"Push Down Operation",clojure,"Push Down Operation	public reduce(f IFn) : Object from class clojure.lang.ASeq to public reduce(f IFn) : Object from class clojure.lang.PersistentList",https://github.com/clojure/clojure/commit/9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0?diff=split
"Push Down Operation",clojure,"Push Down Operation	public reduce(f IFn, start Object) : Object from class clojure.lang.ASeq to public reduce(f IFn, start Object) : Object from class clojure.lang.PersistentList",https://github.com/clojure/clojure/commit/9bc10fc85c9ec0cca1aa4e7faa59cee45a4deea0?diff=split
"Push Down Operation",voldemort,"Push Down Operation	public getZoneNaryForNodesPartition(zoneId int, nodeId int, partitionId int) : int from class voldemort.routing.BaseStoreRoutingPlan to public getZoneNaryForNodesPartition(zoneId int, nodeId int, partitionId int) : int from class voldemort.routing.StoreRoutingPlan",https://github.com/voldemort/voldemort/commit/5459942b99dc2a0bbdf32bcfe3f5928fe1084591?diff=split
"Push Down Operation",titan,"Push Down Operation	public TitanGraphSerialTest(config Configuration, threadPoolSize int, runnableCount int) from class com.thinkaurelius.titan.graphdb.TitanGraphSerialTest to private initializeGraph(g TitanGraph) : void from class com.thinkaurelius.titan.graphdb.thrift.InternalCassandraGraphSerialTest",https://github.com/thinkaurelius/titan/commit/abb5274f4ffe6f2ac7590357f0b966629be41825?diff=split
"Push Down Operation",RxJava,"Push Down Operation	public schedule(state T, action Func2<Scheduler,T,Subscription>, dueTime long, unit TimeUnit) : Subscription from class rx.concurrency.AbstractScheduler to public schedule(state T, action Func2<Scheduler,T,Subscription>, delayTime long, unit TimeUnit) : Subscription from class rx.concurrency.ExecutorScheduler",https://github.com/ReactiveX/RxJava/commit/ea88d82b41b85750ba2bddbbe2e71ca3580d621a?diff=split
"Push Down Operation",netty,"Push Down Operation	public awaitUninterruptibly(timeoutMillis long) : boolean from class io.netty.channel.CompleteChannelFuture to public syncUninterruptibly() : ChannelPromise from class io.netty.channel.CompleteChannelPromise",https://github.com/netty/netty/commit/88cc8c17392502e037cd1d893a8b74c222d4a287?diff=split
"Extract Interface",clojure,"Extract Interface	clojure.lang.Associative from classes [clojure.lang.IPersistentMap]",https://github.com/clojure/clojure/commit/ae23e1e284833c61924cc09f4053ded4cc96cc44?diff=split
"Extract Interface",netty,"Extract Interface	org.jboss.netty.example.localtime.LocalTimeOrBuilder from classes [org.jboss.netty.example.localtime.LocalTime]",https://github.com/netty/netty/commit/5abd23d3baf1f3c5be2b92c267df926c4bc46877?diff=split
"Extract Interface",clojure,"Extract Interface	clojure.lang.Indexed from classes [clojure.lang.IPersistentVector]",https://github.com/clojure/clojure/commit/ff27522840fb3c1681c331ad1fb44a313bd44e0a?diff=split
"Extract Interface",titan,"Extract Interface	com.thinkaurelius.titan.core.TitanSchemaType from classes [com.thinkaurelius.titan.core.RelationType, com.thinkaurelius.titan.core.VertexLabel]",https://github.com/thinkaurelius/titan/commit/03d3a4deb3d60589ad18a445906b6546bfbbfce2?diff=split
"Extract Interface",clojure,"Extract Interface	clojure.lang.IndexedSeq from classes [clojure.lang.ArraySeq]",https://github.com/clojure/clojure/commit/0d697a5d3edb1551353f6fad0a4c98b8d803b106?diff=split
"Extract Interface",netty,"Extract Interface	io.netty.channel.ChannelFutureFactory from classes [io.netty.channel.ChannelHandlerContext]",https://github.com/netty/netty/commit/825d7964c9d1afcc07668311aafa582e337edcab?diff=split
"Extract Interface",titan,"Extract Interface	com.thinkaurelius.titan.core.log.TransactionRecovery from classes [com.thinkaurelius.titan.graphdb.log.StandardTransactionLogProcessor]",https://github.com/thinkaurelius/titan/commit/de317397cfe0dbd0e9cfb1ca9988e4a7818b59aa?diff=split
"Extract Interface",k-9,"Extract Interface	com.fsck.k9.crypto.CryptoProvider.CryptoDecryptCallback from classes [com.fsck.k9.fragment.MessageViewFragment]",https://github.com/k9mail/k-9/commit/bbcc4988ba52ca5e8212a73444913d35c23cebc4?diff=split
"Extract Interface",netty,"Extract Interface	io.netty.buffer.ChannelBuf.Unsafe from classes [io.netty.buffer.ReadOnlyByteBuf, io.netty.buffer.UnpooledDirectByteBuf, io.netty.buffer.DuplicatedByteBuf, io.netty.buffer.DefaultCompositeByteBuf, io.netty.buffer.UnpooledHeapByteBuf, io.netty.buffer.SlicedByteBuf, io.netty.handler.codec.ReplayingDecoderBuffer]",https://github.com/netty/netty/commit/51e6519b67cc947e5375038e26595d9bbbc4d4bb?diff=split
"Extract Interface",netty,"Extract Interface	io.netty.handler.codec.spdy.SpdyFrame from classes [io.netty.handler.codec.spdy.SpdyPingFrame, io.netty.handler.codec.spdy.SpdySettingsFrame, io.netty.handler.codec.spdy.SpdyStreamFrame, io.netty.handler.codec.spdy.SpdyWindowUpdateFrame, io.netty.handler.codec.spdy.SpdyGoAwayFrame]",https://github.com/netty/netty/commit/c8ca3299324a1e2b9ce501c95715cf10ea70c238?diff=split
"Convert Anonymous Class to Type",RxJava,"Convert Anonymous Class to Type	rx.util.BufferClosings.1 was converted to rx.operators.ChunkedOperation.SkippingChunkCreator",https://github.com/ReactiveX/RxJava/commit/5789894638a62ac17b5276053e3bea8bdd570580?diff=split
"Convert Anonymous Class to Type",netty,"Convert Anonymous Class to Type	io.netty.channel.epoll.EpollReuseAddrTest.1 was converted to io.netty.channel.epoll.EpollReuseAddrTest.DummyHandler",https://github.com/netty/netty/commit/5babc1a498a9463d856af7d7728b9c8cd0f681d6?diff=split
"Convert Anonymous Class to Type",voldemort,"Convert Anonymous Class to Type	voldemort.socketpool.ResourcePoolTestUtils.2 was converted to voldemort.store.socket.clientrequest.BlockingClientRequest",https://github.com/voldemort/voldemort/commit/21ef9f2acff4bd9720b8728cb44a23a04e0f4e32?diff=split
"Convert Anonymous Class to Type",voldemort,"Convert Anonymous Class to Type	voldemort.socketpool.ResourcePoolTestUtils.2 was converted to voldemort.server.niosocket.NioSelectorManager",https://github.com/voldemort/voldemort/commit/21ef9f2acff4bd9720b8728cb44a23a04e0f4e32?diff=split
"Convert Anonymous Class to Type",storm,"Convert Anonymous Class to Type	backtype.storm.serialization.SerializationFactory.1 was converted to backtype.storm.serialization.KryoFactory",https://github.com/nathanmarz/storm/commit/3539864fa4fc622e10fdba4e28d99e1cc7d73949?diff=split
"Convert Anonymous Class to Type",RxJava,"Convert Anonymous Class to Type	rx.util.BufferOpenings.1 was converted to rx.operators.ChunkedOperation.SkippingChunkCreator",https://github.com/ReactiveX/RxJava/commit/5789894638a62ac17b5276053e3bea8bdd570580?diff=split
"Convert Anonymous Class to Type",voldemort,"Convert Anonymous Class to Type	voldemort.socketpool.ResourcePoolTestUtils.2 was converted to voldemort.store.socket.clientrequest.ClientRequestExecutor",https://github.com/voldemort/voldemort/commit/21ef9f2acff4bd9720b8728cb44a23a04e0f4e32?diff=split
"Convert Anonymous Class to Type",storm,"Convert Anonymous Class to Type	backtype.storm.serialization.SerializationFactory.1 was converted to backtype.storm.serialization.ITupleSerializer",https://github.com/nathanmarz/storm/commit/3539864fa4fc622e10fdba4e28d99e1cc7d73949?diff=split
"Convert Anonymous Class to Type",RxJava,"Convert Anonymous Class to Type	rx.util.BufferClosings.1 was converted to rx.operators.ChunkedOperation.TimeBasedChunks",https://github.com/ReactiveX/RxJava/commit/5789894638a62ac17b5276053e3bea8bdd570580?diff=split
"Convert Anonymous Class to Type",netty,"Convert Anonymous Class to Type	io.netty.channel.epoll.EpollReuseAddrTest.1 was converted to io.netty.channel.epoll.EpollReuseAddrTest.DatagramSocketTestHandler",https://github.com/netty/netty/commit/5babc1a498a9463d856af7d7728b9c8cd0f681d6?diff=split
"Pull Up Attribute",netty,"Pull Up Attribute	private order : ByteOrder from class io.netty.buffer.CompositeByteBuf to class io.netty.buffer.AbstractByteBuf",https://github.com/netty/netty/commit/754392aaa92b5edd72d941873a1fadbd1029f279?diff=split
"Pull Up Attribute",netty,"Pull Up Attribute	package worker : NioWorker from class org.jboss.netty.channel.socket.nio.NioClientSocketChannel to class org.jboss.netty.channel.socket.nio.NioSocketChannel",https://github.com/netty/netty/commit/ad595a3a5baed419ce93a658d2d0795a2fef5b36?diff=split
"Pull Up Attribute",titan,"Pull Up Attribute	private queryOnlyLoaded : boolean from class com.thinkaurelius.titan.graphdb.query.vertex.VertexCentricQueryBuilder to class com.thinkaurelius.titan.graphdb.query.vertex.AbstractVertexCentricQueryBuilder",https://github.com/thinkaurelius/titan/commit/03d3a4deb3d60589ad18a445906b6546bfbbfce2?diff=split
"Pull Up Attribute",netty,"Pull Up Attribute	private order : ByteOrder from class io.netty.buffer.NioBufferBackedByteBuf to class io.netty.buffer.AbstractByteBuf",https://github.com/netty/netty/commit/754392aaa92b5edd72d941873a1fadbd1029f279?diff=split
"Pull Up Attribute",voldemort,"Pull Up Attribute	protected port : int from class voldemort.server.niosocket.NioSocketService to class voldemort.server.AbstractSocketService",https://github.com/voldemort/voldemort/commit/3f7d24c929567c8eca356afd09e7a19d88de2c3e?diff=split
"Pull Up Attribute",k-9,"Pull Up Attribute	private mDateFormat : DateFormat from class com.android.email.activity.FolderList to class com.android.email.K9ListActivity",https://github.com/k9mail/k-9/commit/fe01446af6fbae092fd8334ebed9259b2dcfe4f7?diff=split
"Pull Up Attribute",voldemort,"Pull Up Attribute	protected rebalancer : Rebalancer from class voldemort.server.rebalance.async.StealerBasedRebalanceAsyncOperation to class voldemort.server.rebalance.async.RebalanceAsyncOperation",https://github.com/voldemort/voldemort/commit/86293a357db18aea43cef295a642f43447b015b7?diff=split
"Pull Up Attribute",netty,"Pull Up Attribute	package worker : NioWorker from class org.jboss.netty.channel.socket.nio.NioAcceptedSocketChannel to class org.jboss.netty.channel.socket.nio.NioSocketChannel",https://github.com/netty/netty/commit/ad595a3a5baed419ce93a658d2d0795a2fef5b36?diff=split
"Pull Up Attribute",netty,"Pull Up Attribute	protected logger : InternalLogger from class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 to class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker",https://github.com/netty/netty/commit/6ac9b17ddd306bcf3dceeb62134a7e38103ac2ac?diff=split
"Pull Up Attribute",titan,"Pull Up Attribute	protected username : String from class com.thinkaurelius.titan.diskstorage.cassandra.AbstractCassandraStoreManager to class com.thinkaurelius.titan.diskstorage.common.DistributedStoreManager",https://github.com/thinkaurelius/titan/commit/d56267d3f843d3d8794ddf9ab69f8d6d501efe81?diff=split
"Push Down Attribute",titan,"Push Down Attribute	protected randomUniqueIDLimit : int from class com.thinkaurelius.titan.diskstorage.idmanagement.AbstractIDManager to class com.thinkaurelius.titan.diskstorage.idmanagement.ConsistentKeyIDManager",https://github.com/thinkaurelius/titan/commit/3e139cc05efe2a3edab45105adce2f909fd8bf93?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	private NUM_KEYS : int from class voldemort.client.rebalance.AbstractRebalanceTest to class voldemort.client.rebalance.RebalanceTest",https://github.com/voldemort/voldemort/commit/6e28bb76e0e9a842219aa0cdac0d0eb9e37cbad4?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	protected required : int from class voldemort.store.routed.action.AbstractAction to class voldemort.store.routed.action.AbstractConfigureNodes",https://github.com/voldemort/voldemort/commit/b9b2857ec36c4de9a8ae2ab388c0713eb006108b?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	protected failureDetector : FailureDetector from class voldemort.store.routed.action.AbstractAction to class voldemort.store.routed.action.AcknowledgeResponse",https://github.com/voldemort/voldemort/commit/b9b2857ec36c4de9a8ae2ab388c0713eb006108b?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	protected required : int from class voldemort.store.routed.action.AbstractAction to class voldemort.store.routed.action.AcknowledgeResponse",https://github.com/voldemort/voldemort/commit/b9b2857ec36c4de9a8ae2ab388c0713eb006108b?diff=split
"Push Down Attribute",netty,"Push Down Attribute	private connectTimeoutFuture : ScheduledFuture<?> from class io.netty.channel.AbstractChannel to class io.netty.channel.socket.nio.AbstractNioChannel",https://github.com/netty/netty/commit/6206d82b2c670aa58537c686ce9144ba94201cf6?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	protected nonblockingStores : Map<Integer,NonblockingStore> from class voldemort.store.routed.action.AbstractAction to class voldemort.store.routed.action.ReadRepair",https://github.com/voldemort/voldemort/commit/b9b2857ec36c4de9a8ae2ab388c0713eb006108b?diff=split
"Push Down Attribute",voldemort,"Push Down Attribute	protected keyIterator : ClosableIterator<ByteArray> from class voldemort.server.protocol.admin.FetchStreamRequestHandler to class voldemort.server.protocol.admin.FetchKeysStreamRequestHandler",https://github.com/voldemort/voldemort/commit/4c1064ed39b8a53825274f2e55e93c647233d400?diff=split
"Push Down Attribute",netty,"Push Down Attribute	private log : Logger from class io.netty.example.udt.echo.rendevous.MsgEchoPeerBase to class io.netty.example.udt.echo.rendevous.MsgEchoPeerOne",https://github.com/netty/netty/commit/5218f38ed0cbe3ac4623dfca38c7094daecdcb6d?diff=split
"Push Down Attribute",netty,"Push Down Attribute	private log : Logger from class io.netty.example.udt.echo.rendevous.MsgEchoPeerBase to class io.netty.example.udt.echo.rendevous.MsgEchoPeerTwo",https://github.com/netty/netty/commit/5218f38ed0cbe3ac4623dfca38c7094daecdcb6d?diff=split
